import React, { useState } from 'react';
import produce from 'immer';
import chroma from 'chroma-js';

const numRows = 6;
const numCols = 30;
// const colors = ['#ff0000', '#fe0100', '#fd0200', '#fc0300', '#fb0400', '#fa0500', '#f90600', '#f80700', '#f60900', '#f50a00', '#f40b00', '#f30c00', '#f20d00', '#f10e00', '#f00f00', '#ef1000', '#ee1100', '#ed1200', '#ec1300', '#eb1400', '#ea1500', '#e91600', '#e81700', '#e71800', '#e51a00', '#e41b00', '#e31c00', '#e21d00', '#e11e00', '#e01f00', '#df2000', '#de2100', '#dd2200', '#dc2300', '#db2400', '#da2500', '#d92600', '#d82700', '#d72800', '#d52a00', '#d42b00', '#d32c00', '#d22d00', '#d12e00', '#d02f00', '#cf3000', '#ce3100', '#cd3200', '#cc3300', '#cb3400', '#ca3500', '#c93600', '#c83700', '#c73800', '#c63900', '#c43b00', '#c33c00', '#c23d00', '#c13e00', '#c03f00', '#bf4000', '#be4100', '#bd4200', '#bc4300', '#bb4400', '#ba4500', '#b94600', '#b84700', '#b74800', '#b64900', '#b44b00', '#b34c00', '#b24d00', '#b14e00', '#b04f00', '#af5000', '#ae5100', '#ad5200', '#ac5300', '#ab5400', '#aa5500', '#a95600', '#a85700', '#a75800', '#a65900', '#a45b00', '#a35c00', '#a25d00', '#a15e00', '#a05f00', '#9f6000', '#9e6100', '#9d6200', '#9c6300', '#9b6400', '#9a6500', '#996600', '#986700', '#976800', '#966900', '#956a00', '#936c00', '#926d00', '#916e00', '#906f00', '#8f7000', '#8e7100', '#8d7200', '#8c7300', '#8b7400', '#8a7500', '#897600', '#887700', '#877800', '#867900', '#857a00', '#837c00', '#827d00', '#817e00', '#807f00', '#7f8000', '#7e8100', '#7d8200', '#7c8300', '#7b8400', '#7a8500', '#798600', '#788700', '#778800', '#768900', '#758a00', '#748b00', '#728d00', '#718e00', '#708f00', '#6f9000', '#6e9100', '#6d9200', '#6c9300', '#6b9400', '#6a9500', '#699600', '#689700', '#679800', '#669900', '#659a00', '#649b00', '#629d00', '#619e00', '#609f00', '#5fa000', '#5ea100', '#5da200', '#5ca300', '#5ba400', '#5aa500', '#59a600', '#58a700', '#57a800', '#56a900', '#55aa00', '#54ab00', '#53ac00', '#51ae00', '#50af00', '#4fb000', '#4eb100', '#4db200', '#4cb300', '#4bb400', '#4ab500', '#49b600', '#48b700', '#47b800', '#46b900', '#45ba00', '#44bb00', '#43bc00', '#41be00', '#40bf00', '#3fc000', '#3ec100', '#3dc200', '#3cc300', '#3bc400', '#3ac500', '#39c600', '#38c700', '#37c800', '#36c900', '#35ca00', '#34cb00', '#33cc00', '#32cd00', '#30cf00', '#2fd000', '#2ed100', '#2dd200', '#2cd300', '#2bd400', '#2ad500', '#29d600', '#28d700', '#27d800', '#26d900', '#25da00', '#24db00', '#23dc00', '#22dd00', '#20df00', '#1fe000', '#1ee100', '#1de200', '#1ce300', '#1be400', '#1ae500', '#19e600', '#18e700', '#17e800', '#16e900', '#15ea00', '#14eb00', '#13ec00', '#12ed00', '#11ee00', '#0ff000', '#0ef100', '#0df200', '#0cf300', '#0bf400', '#0af500', '#09f600', '#08f700', '#07f800', '#06f900', '#05fa00', '#04fb00', '#03fc00', '#02fd00', '#01fe00', '#00fe01', '#00fd02', '#00fc03', '#00fb04', '#00fa05', '#00f906', '#00f807', '#00f708', '#00f609', '#00f50a', '#00f40b', '#00f30c', '#00f20d', '#00f10e', '#00f00f', '#00ee11', '#00ed12', '#00ec13', '#00eb14', '#00ea15', '#00e916', '#00e817', '#00e718', '#00e619', '#00e51a', '#00e41b', '#00e31c', '#00e21d', '#00e11e', '#00e01f', '#00df20', '#00dd22', '#00dc23', '#00db24', '#00da25', '#00d926', '#00d827', '#00d728', '#00d629', '#00d52a', '#00d42b', '#00d32c', '#00d22d', '#00d12e', '#00d02f', '#00cf30', '#00cd32', '#00cc33', '#00cb34', '#00ca35', '#00c936', '#00c837', '#00c738', '#00c639', '#00c53a', '#00c43b', '#00c33c', '#00c23d', '#00c13e', '#00c03f', '#00bf40', '#00be41', '#00bc43', '#00bb44', '#00ba45', '#00b946', '#00b847', '#00b748', '#00b649', '#00b54a', '#00b44b', '#00b34c', '#00b24d', '#00b14e', '#00b04f', '#00af50', '#00ae51', '#00ac53', '#00ab54', '#00aa55', '#00a956', '#00a857', '#00a758', '#00a659', '#00a55a', '#00a45b', '#00a35c', '#00a25d', '#00a15e', '#00a05f', '#009f60', '#009e61', '#009d62', '#009b64', '#009a65', '#009966', '#009867', '#009768', '#009669', '#00956a', '#00946b', '#00936c', '#00926d', '#00916e', '#00906f', '#008f70', '#008e71', '#008d72', '#008b74', '#008a75', '#008976', '#008877', '#008778', '#008679', '#00857a', '#00847b', '#00837c', '#00827d', '#00817e', '#00807f', '#007f80', '#007e81', '#007d82', '#007c83', '#007a85', '#007986', '#007887', '#007788', '#007689', '#00758a', '#00748b', '#00738c', '#00728d', '#00718e', '#00708f', '#006f90', '#006e91', '#006d92', '#006c93', '#006a95', '#006996', '#006897', '#006798', '#006699', '#00659a', '#00649b', '#00639c', '#00629d', '#00619e', '#00609f', '#005fa0', '#005ea1', '#005da2', '#005ca3', '#005ba4', '#0059a6', '#0058a7', '#0057a8', '#0056a9', '#0055aa', '#0054ab', '#0053ac', '#0052ad', '#0051ae', '#0050af', '#004fb0', '#004eb1', '#004db2', '#004cb3', '#004bb4', '#0049b6', '#0048b7', '#0047b8', '#0046b9', '#0045ba', '#0044bb', '#0043bc', '#0042bd', '#0041be', '#0040bf', '#003fc0', '#003ec1', '#003dc2', '#003cc3', '#003bc4', '#0039c6', '#0038c7', '#0037c8', '#0036c9', '#0035ca', '#0034cb', '#0033cc', '#0032cd', '#0031ce', '#0030cf', '#002fd0', '#002ed1', '#002dd2', '#002cd3', '#002bd4', '#002ad5', '#0028d7', '#0027d8', '#0026d9', '#0025da', '#0024db', '#0023dc', '#0022dd', '#0021de', '#0020df', '#001fe0', '#001ee1', '#001de2', '#001ce3', '#001be4', '#001ae5', '#0018e7', '#0017e8', '#0016e9', '#0015ea', '#0014eb', '#0013ec', '#0012ed', '#0011ee', '#0010ef', '#000ff0', '#000ef1', '#000df2', '#000cf3', '#000bf4', '#000af5', '#0009f6', '#0007f8', '#0006f9', '#0005fa', '#0004fb', '#0003fc', '#0002fd', '#0001fe', '#0000ff']
// const colors = chroma.bezier(['yellow', 'red', 'orange', 'green', 'blue', 'purple']).scale().colors(480);
const colors = [
    chroma.scale(['red','orange']).mode('lch').colors(30),
    chroma.scale(['orange','yellow']).mode('lch').colors(30).reverse(),
    chroma.scale(['yellow','green']).mode('lch').colors(30),
    chroma.scale(['green','blue']).mode('lch').colors(30).reverse(),
    chroma.scale(['blue','purple']).mode('lch').colors(30),
    chroma.scale(['purple','pink']).mode('lch').colors(30).reverse(),
]





const Grid = (props) => {
    const [grid, setGrid] = useState(() => {
        const rows = [];
        for (let i=0; i < numRows; i++) {
            rows.push(Array.from(Array(numCols), () => 0))
        }
        
        return rows;
    });
    const [clickedColor, setClickedColor] = useState('' );
    
    console.log(grid);
    
    return (
        <>
        <h2> {clickedColor ? `You've clicked ${clickedColor}` : 'Click a colour!' } </h2>
        <div style={{
            display: 'grid',
            gridTemplateColumns: `repeat(${numCols}, 36px)`
        }}>

            {grid.map((rows, x) => 
             rows.map((col, y) => <div    
             key={`${x}-${y}`}
             onClick = {() => {
                 const newGrid = produce(grid, gridCopy => {
                     gridCopy[x][y] = grid[x][y] ? 0 : 1;
                    })
                    setGrid(newGrid);
                    console.log('clicked ', `${colors[x][y]}`)
                    setClickedColor(`${colors[x][y]}`)
                }}
                style={{
                    width: 30, 
                    height: 30,
                    backgroundColor: colors[x][y],
                    border: 'solid 1px lightgrey',
                    borderRadius: '3px',
                    padding: '3px',
                }}
                />
                ))}
        </div>
        </>
    );
};

export default Grid;